/*
 * Ext.ux.StoreView
 */
Ext.define("Ext.ux.StoreView",{override:"Ext.data.Store",config:{},constructor:function(){this.callParent(arguments);if(this.getViews()&&Ext.isArray(this.getViews())&&this.getViews().length>0){this.initViews();this.on({addrecords:this.refreshViews,updaterecord:this.refreshViews,removerecords:this.refreshViews,scope:this})}},initViews:function(){var d=0,c=this.getViews().length,b,a={};for(;d<c;d++){b=this.getViews()[d];a[b.name]=this.createView(b)}this.config.views=a},createView:function(a){Ext.apply(a,{store:Ext.create("Ext.data.Store",{model:this.getModel(),data:this.data.filterBy(a.filterFn).items})});return a},addView:function(b){var a=this.getView(b);if(a&&a.name){console.log('View with the name "'+b.name+'" already exists... overwriting.')}var c=this.createView(b);this.getViews()[c.name]=c;return c},refreshViews:function(){var b=this.getViews(),a;for(var c in b){if(b.hasOwnProperty(c)){a=b[c];a.store.data.clear();a.store.add(this.data.filterBy(a.filterFn).items)}}},getViews:function(){return this.config.views},getView:function(b){var a=this.getViewData(b);return Ext.isEmpty(a)?null:a.store},getViewData:function(a){return this.getViews()[a]}});