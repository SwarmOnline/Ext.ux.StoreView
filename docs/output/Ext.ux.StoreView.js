Ext.data.JsonP.Ext_ux_StoreView({"subclasses":[],"mixins":[],"code_type":"ext_define","inheritable":false,"component":false,"meta":{},"mixedInto":[],"uses":[],"aliases":{},"parentMixins":[],"superclasses":["Ext.Base"],"html_meta":{},"tagname":"class","files":[{"href":"Ext.ux.StoreView.html#Ext-ux-StoreView","filename":"Ext.ux.StoreView.js"}],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Ext.Base<div class='subclass '><strong>Ext.ux.StoreView</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Ext.ux.StoreView.html#Ext-ux-StoreView' target='_blank'>Ext.ux.StoreView.js</a></div></pre><div class='doc-contents'><p><a href=\"#!/api/Ext.ux.StoreView\" rel=\"Ext.ux.StoreView\" class=\"docClass\">Ext.ux.StoreView</a></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-views' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.StoreView'>Ext.ux.StoreView</span><br/><a href='source/Ext.ux.StoreView.html#Ext-ux-StoreView-cfg-views' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.StoreView-cfg-views' class='name expandable'>views</a><span> : Object[]</span></div><div class='description'><div class='short'>The views configuration. ...</div><div class='long'><p>The views configuration. This must have the following properties:</p>\n\n<ul>\n<li>{String} name The name of the view that will be used as its identifier when retrieving it later. This should be a valid JavaScript object key.</li>\n<li>{Function} filterFn This is the function that will be used to determine the records that are included in the view. This will be passed to the underlying Ext.util.MixedCollection instance's filterBy method and so should\n\n<pre><code>                accept 1 parameter (the current model instance) and return true or false determining if the record will be included in the dataset.\n</code></pre></li>\n</ul>\n\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addView' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.StoreView'>Ext.ux.StoreView</span><br/><a href='source/Ext.ux.StoreView.html#Ext-ux-StoreView-method-addView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.StoreView-method-addView' class='name expandable'>addView</a>( <span class='pre'>Object viewCfg</span> ) : Object</div><div class='description'><div class='short'>Add a new View to the Store and then returns it. ...</div><div class='long'><p>Add a new View to the Store and then returns it.\nIf the new view's name conflicts with an existing one it will be overwritten. @public</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>viewCfg</span> : Object<div class='sub-desc'><p>The View's configuration. See the views config for details</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The created View object. Contains all original config properties and a 'store' property</p>\n</div></li></ul></div></div></div><div id='method-createView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.StoreView'>Ext.ux.StoreView</span><br/><a href='source/Ext.ux.StoreView.html#Ext-ux-StoreView-method-createView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.StoreView-method-createView' class='name expandable'>createView</a>( <span class='pre'>Object viewCfg</span> ) : Object<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Creates a Views Store based on the configuration shown and merges it with the config object. ...</div><div class='long'><p>Creates a Views Store based on the configuration shown and merges it with the config object.\nLoads the relevant data into the store straight away.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>viewCfg</span> : Object<div class='sub-desc'><p>The View configuration object</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The original View configuration with the new store included</p>\n</div></li></ul></div></div></div><div id='method-filterBy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.StoreView'>Ext.ux.StoreView</span><br/><a href='source/Ext.ux.StoreView.html#Ext-ux-StoreView-method-filterBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.StoreView-method-filterBy' class='name expandable'>filterBy</a>( <span class='pre'>Object fn, Object scope, Object useFilteredItems</span> ) : this.self</div><div class='description'><div class='short'>This override allows the filter to be applied to only the Collection's filtered items rather than the full item set. ...</div><div class='long'><p>This override allows the filter to be applied to only the Collection's filtered items rather than the full item set.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>useFilteredItems</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>this.self</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getActual' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.StoreView'>Ext.ux.StoreView</span><br/><a href='source/Ext.ux.StoreView.html#Ext-ux-StoreView-method-getActual' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.StoreView-method-getActual' class='name expandable'>getActual</a>( <span class='pre'>Model record</span> ) : Model</div><div class='description'><div class='short'>Returns the actual record from the main data store rather than the View's copy. ...</div><div class='long'><p>Returns the actual record from the main data store rather than the View's copy.\nPass in the View's record instance to have the main one returned. @public</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : Model<div class='sub-desc'><p>A View's copy of a record.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Model</span><div class='sub-desc'><p>The original record instance from the main store.</p>\n</div></li></ul></div></div></div><div id='method-getView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.StoreView'>Ext.ux.StoreView</span><br/><a href='source/Ext.ux.StoreView.html#Ext-ux-StoreView-method-getView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.StoreView-method-getView' class='name expandable'>getView</a>( <span class='pre'>String viewName, Object params</span> ) : Ext.data.Store</div><div class='description'><div class='short'>Returns the specified View's store so it can be bound to a component etc. ...</div><div class='long'><p>Returns the specified View's store so it can be bound to a component etc. @public</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>viewName</span> : String<div class='sub-desc'><p>The name of the View to access (as configured by the 'name' property supplied originally)</p>\n</div></li><li><span class='pre'>params</span> : Object<div class='sub-desc'><p>An object containing parameter values that are passed as the filterFns 3rd argument allowing additional values to be included in the filter function at runtime</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Ext.data.Store</span><div class='sub-desc'><p>The View's store</p>\n</div></li></ul></div></div></div><div id='method-getViewData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.StoreView'>Ext.ux.StoreView</span><br/><a href='source/Ext.ux.StoreView.html#Ext-ux-StoreView-method-getViewData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.StoreView-method-getViewData' class='name expandable'>getViewData</a>( <span class='pre'>String viewName</span> ) : Object</div><div class='description'><div class='short'>Returns the specified View's full data object. ...</div><div class='long'><p>Returns the specified View's full data object. @public</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>viewName</span> : String<div class='sub-desc'><p>The name of the View to retrieve</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The View object or undefined if not found</p>\n</div></li></ul></div></div></div><div id='method-getViewInstances' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.StoreView'>Ext.ux.StoreView</span><br/><a href='source/Ext.ux.StoreView.html#Ext-ux-StoreView-method-getViewInstances' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.StoreView-method-getViewInstances' class='name expandable'>getViewInstances</a>( <span class='pre'></span> ) : Object</div><div class='description'><div class='short'>Returns the Views array containing the Views' stores and configs. ...</div><div class='long'><p>Returns the Views array containing the Views' stores and configs.\nThis will return an Object with each View's object accessible via its configured 'name' (as the key) @public</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The View object in the format: { viewName: { store: ..., view: { name: viewName, filterFn: ... } } }</p>\n</div></li></ul></div></div></div><div id='method-initEvents' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.StoreView'>Ext.ux.StoreView</span><br/><a href='source/Ext.ux.StoreView.html#Ext-ux-StoreView-method-initEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.StoreView-method-initEvents' class='name expandable'>initEvents</a>( <span class='pre'></span> ) : void<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Bind handlers to the Store's events to keep Views up to date. ...</div><div class='long'><p>Bind handlers to the Store's events to keep Views up to date.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-initViews' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.StoreView'>Ext.ux.StoreView</span><br/><a href='source/Ext.ux.StoreView.html#Ext-ux-StoreView-method-initViews' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.StoreView-method-initViews' class='name expandable'>initViews</a>( <span class='pre'></span> ) : void<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Initialises the additional View stores and populates them with its current data set. ...</div><div class='long'><p>Initialises the additional View stores and populates them with its current data set.\nEach view will have an object created containing the following properties:\n - {Ext.data.Store} store The View store. This can be used to bind to a list or dataview etc.\n - {Object} view The original View configuration including the name and filterFn.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-refreshView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.StoreView'>Ext.ux.StoreView</span><br/><a href='source/Ext.ux.StoreView.html#Ext-ux-StoreView-method-refreshView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.StoreView-method-refreshView' class='name expandable'>refreshView</a>( <span class='pre'>Object/String view</span> ) : void<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Refreshes a single View's data. ...</div><div class='long'><p>Refreshes a single View's data.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object/String<div class='sub-desc'><p>Either a View object or the name of the View to be refreshed</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-refreshViews' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ux.StoreView'>Ext.ux.StoreView</span><br/><a href='source/Ext.ux.StoreView.html#Ext-ux-StoreView-method-refreshViews' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ux.StoreView-method-refreshViews' class='name expandable'>refreshViews</a>( <span class='pre'></span> ) : void</div><div class='description'><div class='short'>Refreshes each of the configured Views with the parent store's current dataset. ...</div><div class='long'><p>Refreshes each of the configured Views with the parent store's current dataset. @public</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>void</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","alternateClassNames":[],"inheritdoc":null,"members":{"event":[],"property":[],"css_var":[],"method":[{"meta":{},"owner":"Ext.ux.StoreView","tagname":"method","name":"addView","id":"method-addView"},{"meta":{"private":true},"owner":"Ext.ux.StoreView","tagname":"method","name":"createView","id":"method-createView"},{"meta":{},"owner":"Ext.ux.StoreView","tagname":"method","name":"filterBy","id":"method-filterBy"},{"meta":{},"owner":"Ext.ux.StoreView","tagname":"method","name":"getActual","id":"method-getActual"},{"meta":{},"owner":"Ext.ux.StoreView","tagname":"method","name":"getView","id":"method-getView"},{"meta":{},"owner":"Ext.ux.StoreView","tagname":"method","name":"getViewData","id":"method-getViewData"},{"meta":{},"owner":"Ext.ux.StoreView","tagname":"method","name":"getViewInstances","id":"method-getViewInstances"},{"meta":{"private":true},"owner":"Ext.ux.StoreView","tagname":"method","name":"initEvents","id":"method-initEvents"},{"meta":{"private":true},"owner":"Ext.ux.StoreView","tagname":"method","name":"initViews","id":"method-initViews"},{"meta":{"private":true},"owner":"Ext.ux.StoreView","tagname":"method","name":"refreshView","id":"method-refreshView"},{"meta":{},"owner":"Ext.ux.StoreView","tagname":"method","name":"refreshViews","id":"method-refreshViews"}],"css_mixin":[],"cfg":[{"meta":{},"owner":"Ext.ux.StoreView","tagname":"cfg","name":"views","id":"cfg-views"}]},"extends":"Ext.Base","name":"Ext.ux.StoreView","singleton":false,"id":"class-Ext.ux.StoreView","statics":{"property":[],"event":[],"css_var":[],"method":[],"css_mixin":[],"cfg":[]},"requires":[]});